1.<程序> :: =   <分程序>.
2.<分程序> ::=   [<常量说明部分>][<变量说明部分>]{[<过程说明部分>]| [<函数说明部分>]}<复合语句>
3.<常量说明部分> ::=   const<常量定义>{,<常量定义>};
4.<常量定义>  ::=    <标识符>＝ <常量>	
5.<常量>  ::=    [+| -] <无符号整数>|<字符>
6.<字符>   ::=  '<字母>' | '<数字>'		//常量在定义时只能有一个字母或者数字，由‘’包含起来。
7.<字符串>   ::= "{十进制编码为32,33,35-126的ASCII字符}"
8.<无符号整数>::=   <数字>{<数字>}
9.<标识符> ::=   <字母>{<字母>|<数字>}
10.<变量说明部分>  ::=   var <变量说明> ; {<变量说明>;}
11.<变量说明> ::=   <标识符>{, <标识符>} : <类型>
12.<类型>   ::=   <基本类型>|array'['<无符号整数>']' of <基本类型>
13.<基本类型>      ::=   integer | char 
14.<过程说明部分>  ::=  <过程首部><分程序>{; <过程首部><分程序>};
15.<函数说明部分>  ::=  <函数首部><分程序>{; <函数首部><分程序>};
16.<过程首部>  ::=   procedure<标识符>[<形式参数表>];   //无返回值的可以看成函数
17.<函数首部>   ::=   function <标识符>[<形式参数表>]: <基本类型>;   //（说明其返回值为基本类型）
18.<形式参数表> ::= '('<形式参数段>{; <形式参数段>}')'
19.<形式参数段>::=   [var]<标识符>{, <标识符>}: <基本类型>   
20.<语句>  ::=   <赋值语句>|<条件语句>|<当循环语句>|<过程调用语句>|<复合语句>|<读语句>|<写语句>|<for循环语句>|<空>
21.<赋值语句>  ::=  <标识符> := <表达式>| <函数标识符> := <表达式> | <标识符>'['<表达式>']':= <表达式>
//x:='a';   在赋值语句中这么写不符合文法
22.<函数标识符 ::=  <标识符> 
23.<表达式>  ::=   [+|-]<项>{<加法运算符><项>}
24.<项>  ::=   <因子>{<乘法运算符><因子>}
25.<因子>::=   <标识符>|<标识符>'['<表达式>']'|<无符号整数>| '('<表达式>')' | <函数调用语句>
26.<函数调用语句> ::=   <标识符>[<实在参数表>]
27.<实在参数表> ::= '(' <实在参数> {, <实在参数>}')'
28.<实在参数> ::=   <表达式> 
29.<加法运算符>  ::=   +|-
30.<乘法运算符  ::=   *|/
31.<条件>  ::=   <表达式><关系运算符><表达式>
//可能会出现	a+b+c=f(d,e,f)		其中a、b、c为标识符这样的神奇语句，此时，等号左边的表达式需要用一个临时变量代替
32.<关系运算符>  ::=   <|<=|>|>= |=|<>
33.<条件语句> ::=   if<条件>then<语句> | if<条件>then<语句>else<语句>
在条件语句中的判断条件中 = 为EQL为“==”
34.<当循环语句>::=   do<语句> while<条件>
35.<for循环语句> ::=   for <标识符>  := <表达式> （downto | to） <表达式> do <语句> //步长为1
36.<过程调用语句>  ::=  <标识符>[<实在参数表>]
37.<复合语句>  ::=   begin<语句>{; <语句>}end
38.<读语句>  ::=   read'('<标识符>{,<标识符>}')'
//read没有read(a[i]);这种形式的！而write则有write(a[i]);
39.<写语句>  ::=   write'('<字符串>,<表达式>')'|write'('<字符串>')'|write'('<表达式>')'
write("%d", a)
write(a)-----------此时若是char，它不可能是一个字符串，只会是一个字符，仔细想想可以是一个字符数组，但是可以这么来打印？通过一个基地址？有的语言可以有的语言不可以，这里待定。先按一个字符来处理
write("Hello, compilier!\n")
40.<字母>   ::=   a|b|c|d…x|y|z |A|B…|Z
41.<数字>  ::=   0|1|2|3…8|9
//函数内是可以重新新的变量的，但是属于函数主部分begin...end则不行，同时，主函数内部不能申明变量


附加说明：

（1）char类型的变量或常量，用字符的ASCII码对应的整数参加运算

（2）标识符区分大小写字母

（3）赋值语句中<函数标识符> := <表达式> 作为函数的返回值，其类型应与返回类型一致，此语句后面的语句可继续执行

（4）写语句中的字符串原样输出，表达式只有单个字符类型的变量或常量按字符输出，其他表达式均按整型输出

（5）数组的下标从0开始

（6）带var的参数为变量形参，实参与该类形参传递数据时是传地址