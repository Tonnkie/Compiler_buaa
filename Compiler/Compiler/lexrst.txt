VARTK var
IDENT arr
COLON :
ARRAYTK array
LBRACE [
INTCON 7
RBRACK ]
OFTK of
INTTK 7
SEMICN ;
IDENT n
COMMA ,
IDENT i
COLON :
INTTK 7
SEMICN ;
PROCETK procedure
IDENT quicksort
LPARENT (
IDENT from
COMMA ,
IDENT til
COLON :
INTTK 7
RPARENT )
SEMICN ;
VARTK var
IDENT ft
COMMA ,
IDENT re
COLON :
INTTK 7
SEMICN ;
IDENT key
COLON :
INTTK 7
SEMICN ;
IDENT flag
COLON :
INTTK 7
SEMICN ;
BEGINTK begin
IDENT ft
ASSIGN :=
IDENT from
SEMICN ;
IDENT re
ASSIGN :=
IDENT til
SEMICN ;
IDENT key
ASSIGN :=
IDENT arr
LBRACE [
IDENT ft
RBRACK ]
SEMICN ;
IFTK if
IDENT ft
LSS <
IDENT re
THENTK then
BEGINTK begin
DOTK do
BEGINTK begin
DOTK do
IFTK if
IDENT ft
LSS <
IDENT re
THENTK then
IFTK if
IDENT arr
LBRACE [
IDENT re
RBRACK ]
GEQ >=
IDENT key
THENTK then
BEGINTK begin
IDENT re
ASSIGN :=
IDENT re
MINU -
INTCON 1
SEMICN ;
IDENT flag
ASSIGN :=
INTCON 1
ENDTK end
ELSETK else
IDENT flag
ASSIGN :=
INTCON 0
ELSETK else
IDENT flag
ASSIGN :=
INTCON 0
WHILETK while
IDENT flag
EQL =
INTCON 1
SEMICN ;
IDENT arr
LBRACE [
IDENT ft
RBRACK ]
ASSIGN :=
IDENT arr
LBRACE [
IDENT re
RBRACK ]
SEMICN ;
DOTK do
IFTK if
IDENT ft
LSS <
IDENT re
THENTK then
IFTK if
IDENT arr
LBRACE [
IDENT ft
RBRACK ]
LEQ <=
IDENT key
THENTK then
BEGINTK begin
IDENT ft
ASSIGN :=
IDENT ft
PLUS +
INTCON 1
SEMICN ;
IDENT flag
ASSIGN :=
INTCON 1
ENDTK end
ELSETK else
IDENT flag
ASSIGN :=
INTCON 0
ELSETK else
IDENT flag
ASSIGN :=
INTCON 0
WHILETK while
IDENT flag
EQL =
INTCON 1
SEMICN ;
IDENT arr
LBRACE [
IDENT re
RBRACK ]
ASSIGN :=
IDENT arr
LBRACE [
IDENT ft
RBRACK ]
SEMICN ;
ENDTK end
WHILETK while
IDENT ft
LSS <
IDENT re
SEMICN ;
IDENT arr
LBRACE [
IDENT ft
RBRACK ]
ASSIGN :=
IDENT key
SEMICN ;
IDENT quicksort
LPARENT (
IDENT from
COMMA ,
IDENT ft
MINU -
INTCON 1
RPARENT )
SEMICN ;
IDENT quicksort
LPARENT (
IDENT ft
PLUS +
INTCON 1
COMMA ,
IDENT til
RPARENT )
SEMICN ;
ENDTK end
SEMICN ;
ENDTK end
SEMICN ;
BEGINTK begin
IDENT n
ASSIGN :=
INTCON 5
SEMICN ;
IDENT arr
LBRACE [
INTCON 0
RBRACK ]
ASSIGN :=
INTCON 4
SEMICN ;
IDENT arr
LBRACE [
INTCON 1
RBRACK ]
ASSIGN :=
INTCON 8
SEMICN ;
IDENT arr
LBRACE [
INTCON 2
RBRACK ]
ASSIGN :=
INTCON 1
SEMICN ;
IDENT arr
LBRACE [
INTCON 3
RBRACK ]
ASSIGN :=
INTCON 3
SEMICN ;
IDENT arr
LBRACE [
INTCON 4
RBRACK ]
ASSIGN :=
INTCON 5
SEMICN ;
IDENT quicksort
LPARENT (
INTCON 0
COMMA ,
INTCON 4
RPARENT )
SEMICN ;
FORTK for
IDENT i
ASSIGN :=
INTCON 0
TOTK to
INTCON 4
DOTK do
WRITETK write
LPARENT (
STRCON  
COMMA ,
IDENT arr
LBRACE [
IDENT i
RBRACK ]
RPARENT )
SEMICN ;
ENDTK end
PERIOD .
