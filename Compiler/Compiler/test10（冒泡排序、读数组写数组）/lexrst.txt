CONSTTK const
IDENT size
EQL =
INTCON 5
SEMICN ;
VARTK var
IDENT list
COLON :
ARRAYTK array
LBRACE [
INTCON 10
RBRACK ]
OFTK of
INTTK 10
SEMICN ;
PROCETK procedure
IDENT swap
LPARENT (
VARTK var
IDENT a
COMMA ,
IDENT b
COLON :
INTTK 10
RPARENT )
SEMICN ;
VARTK var
IDENT t
COLON :
INTTK 10
SEMICN ;
BEGINTK begin
IDENT t
ASSIGN :=
IDENT a
SEMICN ;
IDENT a
ASSIGN :=
IDENT b
SEMICN ;
IDENT b
ASSIGN :=
IDENT t
ENDTK end
SEMICN ;
PROCETK procedure
IDENT sort
SEMICN ;
VARTK var
IDENT i
COMMA ,
IDENT j
COLON :
INTTK 10
SEMICN ;
BEGINTK begin
FORTK for
IDENT i
ASSIGN :=
IDENT size
MINU -
INTCON 1
DOWNTK downto
INTCON 1
DOTK do
FORTK for
IDENT j
ASSIGN :=
INTCON 0
TOTK to
IDENT i
MINU -
INTCON 1
DOTK do
IFTK if
IDENT list
LBRACE [
IDENT j
RBRACK ]
GRE >
IDENT list
LBRACE [
IDENT j
PLUS +
INTCON 1
RBRACK ]
THENTK then
BEGINTK begin
IDENT swap
LPARENT (
IDENT list
LBRACE [
IDENT j
RBRACK ]
COMMA ,
IDENT list
LBRACE [
IDENT j
PLUS +
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
ENDTK end
ENDTK end
SEMICN ;
PROCETK procedure
IDENT readlist
SEMICN ;
VARTK var
IDENT i
COMMA ,
IDENT t
COLON :
INTTK 1
SEMICN ;
BEGINTK begin
FORTK for
IDENT i
ASSIGN :=
INTCON 0
TOTK to
IDENT size
MINU -
INTCON 1
DOTK do
BEGINTK begin
READTK read
LPARENT (
IDENT t
RPARENT )
SEMICN ;
IDENT list
LBRACE [
IDENT i
RBRACK ]
ASSIGN :=
IDENT t
ENDTK end
ENDTK end
SEMICN ;
PROCETK procedure
IDENT writelist
SEMICN ;
VARTK var
IDENT i
COLON :
INTTK 1
SEMICN ;
BEGINTK begin
FORTK for
IDENT i
ASSIGN :=
INTCON 0
TOTK to
IDENT size
MINU -
INTCON 1
DOTK do
BEGINTK begin
WRITETK write
LPARENT (
STRCON  
COMMA ,
IDENT list
LBRACE [
IDENT i
RBRACK ]
RPARENT )
ENDTK end
ENDTK end
SEMICN ;
BEGINTK begin
IDENT readlist
SEMICN ;
IDENT sort
SEMICN ;
IDENT writelist
SEMICN ;
ENDTK end
PERIOD .
