CONSTTK const
IDENT size
EQL =
INTCON 5
COMMA ,
IDENT max
EQL =
INTCON 100
SEMICN ;
VARTK var
IDENT x1
COMMA ,
IDENT x2
COMMA ,
IDENT x3
COLON :
INTTK 100
SEMICN ;
IDENT c1
COMMA ,
IDENT c2
COLON :
CHARTK char
SEMICN ;
IDENT list
COLON :
ARRAYTK array
LBRACE [
INTCON 10
RBRACK ]
OFTK of
INTTK 10
SEMICN ;
FUNCTK function
IDENT gcd
LPARENT (
IDENT a
COMMA ,
IDENT b
COLON :
INTTK 10
RPARENT )
COLON :
INTTK 10
IDENT a
COMMA ,
IDENT b
COLON :
INTTK 10
RPARENT )
COLON :
INTTK 10
SEMICN ;
FUNCTK function
IDENT mod
LPARENT (
IDENT a
COMMA ,
IDENT b
COLON :
INTTK 10
RPARENT )
COLON :
INTTK 10
IDENT a
COMMA ,
IDENT b
COLON :
INTTK 10
RPARENT )
COLON :
INTTK 10
SEMICN ;
BEGINTK begin
IDENT mod
ASSIGN :=
IDENT a
MINU -
IDENT a
DIV /
IDENT b
MULT *
IDENT b
ENDTK end
SEMICN ;
BEGINTK begin
IFTK if
IDENT a
MULT *
IDENT b
EQL =
INTCON 0
THENTK then
IDENT gcd
ASSIGN :=
IDENT a
PLUS +
IDENT b
ELSETK else
IDENT gcd
ASSIGN :=
IDENT gcd
LPARENT (
IDENT mod
LPARENT (
IDENT a
COMMA ,
IDENT b
RPARENT )
COMMA ,
IDENT mod
LPARENT (
IDENT b
COMMA ,
IDENT a
RPARENT )
RPARENT )
ENDTK end
SEMICN ;
BEGINTK begin
WRITETK write
LPARENT (
STRCON gcd test begin!
RPARENT )
SEMICN ;
READTK read
LPARENT (
IDENT x1
COMMA ,
IDENT x2
RPARENT )
SEMICN ;
WRITETK write
LPARENT (
IDENT gcd
LPARENT (
IDENT x1
COMMA ,
IDENT x2
RPARENT )
RPARENT )
SEMICN ;
ENDTK end
PERIOD .
